{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

{
Program ID:
8
Execution Stack:
(int v; (Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
int v
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(Ref(int) a; (v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
Ref(int) a
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(v=10; (new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
v=10
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->0

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(new(a, 22);; (fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a)))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
new(a, 22);
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:

Symbol Table:
a->(0, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
fork( (writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a))))) );
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
(writeHeap(a, 30);; (v=32; (print(v); print(readHeap(a)))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
0
Execution Stack:
writeHeap(a, 30);
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 22

Symbol Table:
a->(1, int)
v->10

Output:

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
0
Execution Stack:
(v=32; (print(v); print(readHeap(a))))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
v=32
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
(print(v); print(readHeap(a)))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30

FileTable:

}

{
Program ID:
0
Execution Stack:
print(v)
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32

FileTable:

}

{
Program ID:
0
Execution Stack:
print(readHeap(a))

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32

FileTable:

}

{
Program ID:
8
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->10

Output:
10
30
32
30

FileTable:

}

{
Program ID:
0
Execution Stack:

Heap:
1 -> 30

Symbol Table:
a->(1, int)
v->32

Output:
10
30
32
30

FileTable:

}

