{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(int v; (v=2; print(v)))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
int v
(v=2; print(v))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
(v=2; print(v))

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
v=2
print(v)

Heap:

Symbol Table:
v->0

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:
print(v)

Heap:

Symbol Table:
v->2

Output:

FileTable:

}

{
Program ID:
1
Execution Stack:

Heap:

Symbol Table:
v->2

Output:
2

FileTable:

}

