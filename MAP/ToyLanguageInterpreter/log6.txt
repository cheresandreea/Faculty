{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(int) v; (new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(int) v
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 20);; (Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 20);
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:

Symbol Table:
v->(0, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(Ref(Ref(int)) a; (new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
Ref(Ref(int)) a
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(a, v);; (new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(a, v);
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20

Symbol Table:
a->(0, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(new(v, 30);; (print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
new(v, 30);
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)

Symbol Table:
a->(2, Ref(int))
v->(1, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(v); (print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
print(v)
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(v)); (print(a); (print(readHeap(a)); print(readHeap(readHeap(a))))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(v))
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(a); (print(readHeap(a)); print(readHeap(readHeap(a)))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
print(a)
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
(print(readHeap(a)); print(readHeap(readHeap(a))))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(a))
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:
print(readHeap(readHeap(a)))

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)

FileTable:

}

{
Program ID:
6
Execution Stack:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

Symbol Table:
a->(2, Ref(int))
v->(3, int)

Output:
(3, int)
30
(2, Ref(int))
(1, int)
20

FileTable:

}

